#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"}]}}

#!csharp

#r "nuget:Microsoft.Graph"
#r "nuget:Microsoft.Identity.Client"
#r "nuget:Azure.Identity"
#r "nuget:DotNetEnv"

using Microsoft.Graph;
using Microsoft.Graph.Models;
using Azure.Identity;
using Microsoft.Identity.Client;
using DotNetEnv;
using Microsoft.Graph.Models.ODataErrors;

#!csharp

Env.TraversePath().Load();
// https://learn.microsoft.com/en-us/graph/api/user-list?view=graph-rest-1.0&tabs=csharp#tabpanel_9_csharp
var clientSecretCredential = new ClientSecretCredential(
Env.GetString("TenantId"),
Env.GetString("ClientId"),
Env.GetString("Secret"));

var graphClient = new GraphServiceClient(clientSecretCredential);

#!csharp

try 
{
    var user = new User
    {
        AccountEnabled = true,
        DisplayName = "User Test",
        MailNickname = "utest1",
        // UserPrincipalName = "RicardoCalvimonte@MarcoMedranoGaraygmail.onmicrosoft.com",
        UserPrincipalName = "utest1@student.naa.edu",
        PasswordProfile = new PasswordProfile
        {
            ForceChangePasswordNextSignIn = false,
            Password = Env.GetString("UserPassword")
        }
    };

    // ADD
    var userCreated = await graphClient.Users.PostAsync(user);
    Console.WriteLine("User Id: " + userCreated.Id);

    // GET
    var u = await graphClient.Users[userCreated.Id].GetAsync();
    Console.WriteLine("User: " + u.UserPrincipalName);

    // DELETE
    await graphClient.Users[userCreated.Id].DeleteAsync();
}
catch(ODataError e)
{
    Console.WriteLine("Error " + e.Message);
}
